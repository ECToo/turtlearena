#summary How to run the game from the SVN
#labels Featured,Phase-Deploy

= Introduction =

*Runing the game* from the SVN (Subversion repository) is split into three parts.

  * Getting the source
  * Compiling the source
  * Final setup and execution

= Getting the source =

You will need to do a Source Checkout, see http://code.google.com/p/turtlearena/source/checkout

= Compiling the source =

Currently the easist way to compile TMNT Arena is Make.

== Linux - Make ==
  # In a terminal change to the engine/ directory and run "make"
  # Output will be in engine/build/*dir*/ (Where *dir* is something like "release-linux-x86")

== Windows - Make ==
See http://wiki.ioquake3.org/Building_ioquake3_on_Windows_-_mingw_and_msys

== Windows - Code::Blocks ==
NOTE: Compiling only works on Windows. However it can be used to view and edit the source on other platforms.
  # Open engine/misc/code_blocks/ioq3.workspace
  # Rebuild workspace
  # Output will be in engine/build/

Defines maybe out of date... so copy the defines from the TMNT config section of the Makefile into all projects (Except Splines and BSPC).

== Others ==
See http://wiki.ioquake3.org/Building_ioquake3 for other platforms and methods of building.

=== Microsoft Visual C++ ===
Currently unsupported. There are project files for ioquake3 in engine/misc/msvc/.

Below are changes that ''should'' make the ioquake3 projects compile TMNT Arena. This is untested.

Workspace:
Add below to workspace
engine/code/splines/Splines.vcproj

Quake3 project:
Link to the output library of Splines project.

Cgame project:
Add below to project
  * engine/code/cgame/cg_npcs.c

Game project:
Add below to project
  * engine/code/game/g_npc.c
  * engine/code/game/g_npcmove.c
  * engine/code/game/g_npcthink.c
  * engine/code/game/g_save.c
  * engine/code/game/g_paths.c

Copy the defines from the TMNT config section of the Makefile into all projects (Except Splines).

= Final setup and execution =

== Windows (Mingw) ==
1. Copy the qvms files from engine/build/release-?/base/vm/ to base/vm/

2. In the command prompt change to the directory where you did the checkout. Example: cd "C:\\Program Files\TMNTArena\svn\"

3. Run in the command prompt: engine\build\release-mingw32-x86\tmntarena.x86 +set fs_basepath "."

== Windows (Other) ==
Other being Code::Blocks or Microsoft Visual C++.

The Code::Blocks and Microsoft Visual C++ projects do not compile QVMs, only DLLs.
The DLLs are used for testing/debuging, while QVMs are used for release. Mingw also compiles DLLs as well as QVMs.

1. Copy the DLLs files from

  * engine/build/cgame_release/cgamex86.dll
  * engine/build/game_release/qagamex86.dll
  * engine/build/q3_ui_release/uix86.dll

to base/

2. In the command prompt change to the directory where you did the checkout. Example: cd "C:\\Program Files\TMNTArena\svn\"

3. Run in the command prompt: engine\build\release-mingw32-x86\tmntarena.x86 +set fs_basepath "." +set vm_game 0 +set vm_cgame 0 +set vm_ui 0

== Linux ==
1. Create a link to each of the 3 qvm files in engine/build/release-?/base/vm/?.qvm in base/vm/
This way you don't have to copy the qvms after each compile.

OR Copy the qvms files instead, to allow running in Windows as well.

2. In the terminal change to the directory where you did the checkout. Example: cd /home/$USER/TMNTArena/svn/

3. Run in the terminal; Example: Run ./engine/build/release-linux-x86/tmntarena.x86 +set fs_basepath "."