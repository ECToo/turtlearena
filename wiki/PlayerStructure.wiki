#summary Player structure

*Player* (playable character) structure. Players have three models that are attached using "tags". Weapons are also attached using tags.

<wiki:toc />

= Locating the data =
All of the data files are stored in base/assets0.pk3, which is simply a renamed .zip file.
Pk3 files can be extracted with any zip program.

= Files =
Players are stored in "base/models/players/PLAYERNAME/", in the release the data is zipped into base/assets0.pk3 (which is simply a renamed .zip)

  * head.md3 - Head model, it will be attached to torso.md3
  * torso.md3 - Upper model, it will be attached to legs.md3
  * legs.md3 - Lower model
  * animation.cfg - Contains animations and other settings for the player

  * *Default skin*
  * icon_default.png - Icon for the default skin
  * head_default.skin - Shaders for head default skin
  * torso_default.skin - Shaders for torso default skin
  * legs_default.skin - Shaders for legs default skin

  * *Red teamplay skin*
  * icon_red.png
  * head_red.skin
  * torso_red.skin
  * legs_red.skin

  * *Blue teamplay skin*
  * icon_blue.png
  * head_blue.skin
  * torso_blue.skin
  * legs_blue.skin


= Skins =
Skins are made up of three ".skin" files and a icon image (.png/.tga/.jpg). The skins default, red, and blue should be include to support all gametypes. Extra skins can be include, for example Raph has a "fugitoid" skin.

  * icon_SKINNAME.png - Icon for the skin
  * head_SKINNAME.skin - Shaders for head
  * torso_SKINNAME.skin - Shaders for torso
  * legs_SKINNAME.skin - Shaders for legs

== Teamplay skins ==
In teamplay gametypes, there can be per-team skins stored in "models/players/PLAYERNAME/TEAMNAME/". TEAMNAME is set to cvar g_blueTeam (default: Shell) or cvar g_redTeam (default: Foot).

== .skin Format ==
*.skin* files set the shaders used by the model. MD3 models contain "meshes" (Groups of triangles), each must have a shader listed. The "tags" (points where other models are attached) are also listed.

Example: Raph's head_default.skin
{{{
h_head,models/players/raph/head
h_head2,models/players/raph/head
h_eye_left,models/players/raph/white
h_eye_right,models/players/raph/white
h_mouth_left,models/players/raph/white
h_mouth_right,models/players/raph/white
tag_head,
}}}

Turtle Arena also supports using *$(dir)* instead of the directory where the player is.
Example: "$(dir)/head" instead of "models/players/raph/head".

= animation.cfg =
animation.cfg contains the animations and other settings. The animation.cfg is normally created when exporting a player model to MD3.

== soundpath ==
By placing "soundpath NAME" in animation.cfg the client will use sounds from "sound/NAME/" instead of "sound/HEADMODELNAME/". Soundpath defaults to the client's headmodel name (which is usually the player model directory name).

== jumpMult ==
By placing "jumpMult 1.5" in animation.cfg, the players jump velocity will be multiplied by what ever "jumpMult" was set to.

= Documentation =
== Tags ==
List of player tags by models.

=== head.md3 ===
  * tag_head

=== upper.md3 ===
  * tag_torso
  * tag_head
  * tag_hand_primary   -- Player's right hand. Used for holding guns/melee weapons.
  * tag_hand_secondary -- Player's left hand. Used for holding CTF flags/melee weapons.
  * // Hold default weapon of the player when not in use.
  * tag_wp_away_primary
  * tag_wp_away_secondary
  * // Currently I just use tag_weapon / tag_flag for compatibility to and from quake3 and MD3 model exporters...
  * tag_weapon (for Quake 3 capatibility) -- Use like tag_hand_primary
  * tag_flag   (for Team Arena capatibility) -- Use like tag_hand_secondary

=== lower.md3 ===
  * tag_torso

== Full skin search info ==
Below is the search order for ".skin" files in Turtle Arena. It uses code from Quake III: Team Arena to allow per-team skins. So Team Arena Players work in team gametypes as well as Quake 3 players.

Based on http://rfactory.org/idteam.html#appendh with the changes I've made to ioquake3.

Note: "raph/fugitoid" is a example; raph is the model, fugitoid is the skin.

=== Head ===
Note: If headmodel starts with `*` ("`*`raph/fugitoid") the "heads" directory is checked before the "players" directory is checked.

==== Team play ====
  * headmodel = raph/fugitoid
  * team = red

  # models/players/raph/fugitoid/head_red.skin
  # models/players/raph/head_red.skin
  # models/players/heads/raph/fugitoid/head_red.skin
  # models/players/heads/raph/head_red.skin

==== Non-team play ====
  * headmodel = raph/fugitoid

  # models/players/raph/head_fugitoid.skin
  # models/players/heads/raph/head_fugitoid.skin

=== Body (lower/upper) ===
==== Team play ====
  * model = raph/fugitoid
  * team = red
  * g_redTeam = Foot

  # models/players/raph/Foot/lower_fugitoid_red.skin
  # models/players/raph/Foot/lower_red.skin
  # models/players/raph/lower_fugitoid_red.skin
  # models/players/raph/lower_red.skin
  # models/players/characters/raph/Foot/lower_fugitoid_red.skin
  # models/players/characters/raph/Foot/lower_red.skin
  # models/players/characters/raph/lower_fugitoid_red.skin
  # models/players/characters/raph/lower_red.skin

==== Non-team play ====
  * model = raph/fugitoid

  # models/players/raph/lower_fugitoid.skin
  # models/players/characters/raph/lower_fugitoid.skin